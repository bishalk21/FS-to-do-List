{"ast":null,"code":"var _jsxFileName = \"/Users/bishal/Library/CloudStorage/OneDrive-Personal/Full Stack Dev/JSProjects/FS Not To Do List/not-to-do-list-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Container } from \"react-bootstrap\";\nimport { TaskForm } from \"./Components/TaskForm\";\nimport { ListArea } from \"./Components/ListArea\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weeklyHours = 7 * 24;\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]); // [] is the initial value\n\n  const total = tasks.reduce((acc, item) => acc + +item.hours, 0);\n  const [ids, setIds] = useState([]);\n\n  const addTask = task => {\n    // addTask is a function that takes in a task\n    if (total + +task.hours > weeklyHours) {\n      alert(\"You have exceeded the weekly hours\");\n      return;\n    }\n\n    setTasks([...tasks, task]); // ...tasks is the spread operator which spreads the array and adds the task to the end of the array\n  };\n\n  const switchTaskType = (id, task) => {\n    // i is the index of the task\n    // task is the task object\n    // console.log(id, task);\n    //   const toDeleteIds = [...tasks]; // ...tasks is the spread operator which spreads the array\n    //   toDeleteIds[i].type = task.type === \"entry\" ? \"bad\" : \"entry\";\n    //   setTasks(toDeleteIds);\n    // };\n    // high order function - takes in a function as an argument   and returns a function as an argument\n    const switchArg = tasks.map((item, index) => {\n      if (item.id === id) {\n        return { ...item,\n          type: task\n        };\n      } else {\n        return item;\n      }\n    });\n    setTasks(switchArg);\n  };\n\n  const deleteTask = event => {\n    const {\n      checked,\n      value,\n      name\n    } = event.target;\n    console.log(checked, value, name);\n\n    if (value === \"entry\" || value === \"bad\") {\n      // if the task is in the  list then delete it from the  list\n      let toDeleteIds = [];\n      tasks.forEach(item => {\n        if (item.type === value) {\n          toDeleteIds.push(item.id);\n        }\n      });\n\n      if (checked) {\n        // if the checkbox is checked then delete the task from the  list\n        setIds(...ids, ...toDeleteIds);\n        console.log(\"checked\");\n      } else {\n        // if the checkbox is not checked then remove the task to the  list\n        // console.log(\"now remove\")\n        const tempArr = tasks.filter(id => !toDeleteIds.includes(id));\n        setIds(tempArr);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center py-3\",\n        children: \"My Not To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListArea, {\n        ids: ids,\n        tasks: tasks,\n        switchTaskType: switchTaskType,\n        total: total,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XSM4esSjKxeF4hKoR6zgtld4Sng=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","TaskForm","ListArea","useState","weeklyHours","App","tasks","setTasks","total","reduce","acc","item","hours","ids","setIds","addTask","task","alert","switchTaskType","id","switchArg","map","index","type","deleteTask","event","checked","value","name","target","console","log","toDeleteIds","forEach","push","tempArr","filter","includes"],"sources":["/Users/bishal/Library/CloudStorage/OneDrive-Personal/Full Stack Dev/JSProjects/FS Not To Do List/not-to-do-list-app/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { Container } from \"react-bootstrap\";\nimport { TaskForm } from \"./Components/TaskForm\";\nimport { ListArea } from \"./Components/ListArea\";\nimport { useState } from \"react\";\n\nconst weeklyHours = 7 * 24;\n\nfunction App() {\n  const [tasks, setTasks] = useState([]); // [] is the initial value\n  const total = tasks.reduce((acc, item) => acc + +item.hours, 0);\n  const [ids, setIds] = useState([]);\n\n  const addTask = (task) => {\n    // addTask is a function that takes in a task\n    if (total + +task.hours > weeklyHours) {\n      alert(\"You have exceeded the weekly hours\");\n      return;\n    }\n    setTasks([...tasks, task]); // ...tasks is the spread operator which spreads the array and adds the task to the end of the array\n  };\n\n  const switchTaskType = (id, task) => {\n    // i is the index of the task\n    // task is the task object\n    // console.log(id, task);\n    //   const toDeleteIds = [...tasks]; // ...tasks is the spread operator which spreads the array\n    //   toDeleteIds[i].type = task.type === \"entry\" ? \"bad\" : \"entry\";\n    //   setTasks(toDeleteIds);\n    // };\n    // high order function - takes in a function as an argument   and returns a function as an argument\n\n    const switchArg = tasks.map((item, index) => {\n      if (item.id === id) {\n        return { ...item, type: task };\n      } else {\n        return item;\n      }\n    });\n    setTasks(switchArg);\n  };\n\n  const deleteTask = (event) => {\n    const { checked, value, name } = event.target;\n    console.log(checked, value, name);\n\n    if (value === \"entry\" || value === \"bad\") {\n      // if the task is in the  list then delete it from the  list\n      let toDeleteIds = [];\n      tasks.forEach((item) => {\n        if (item.type === value) {\n          toDeleteIds.push(item.id);\n        }\n      });\n      if (checked) {\n        // if the checkbox is checked then delete the task from the  list\n        setIds(...ids, ...toDeleteIds);\n        console.log(\"checked\");\n      } else {\n        // if the checkbox is not checked then remove the task to the  list\n        // console.log(\"now remove\")\n        const tempArr = tasks.filter((id) => !toDeleteIds.includes(id));\n        setIds(tempArr);\n      }\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Container>\n        {/* form comp */}\n        <h1 className=\"text-center py-3\">My Not To Do List</h1>\n        <TaskForm addTask={addTask} />{\" \"}\n        {/* addTask is a function that takes in a task */}\n        <hr />\n        {/* list comp */}\n        <ListArea\n          ids={ids}\n          tasks={tasks}\n          switchTaskType={switchTaskType}\n          total={total}\n          deleteTask={deleteTask}\n        />{\" \"}\n        {/* tasks is the argument that is passed to ListArea */}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}